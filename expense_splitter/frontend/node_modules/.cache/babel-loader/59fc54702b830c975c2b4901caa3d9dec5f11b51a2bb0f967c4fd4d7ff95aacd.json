{"ast":null,"code":"var _jsxFileName = \"/Users/omer/Desktop/Noir-hack/expense_splitter/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [paid, setPaid] = useState([\"\", \"\", \"\"]);\n  const [total, setTotal] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const updatePaid = (index, value) => {\n    const updated = [...paid];\n    updated[index] = value;\n    setPaid(updated);\n  };\n  const runProver = async () => {\n    const data = {\n      paid_list: paid.map(Number),\n      total: Number(total)\n    };\n    await fetch(\"/write-toml\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const res = await fetch(\"/run-prover\");\n    const text = await res.text();\n    setOutput(text.trim());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gray-50 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"\\uD83E\\uDDEE ZK Expense Splitter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 w-full max-w-sm\",\n      children: [paid.map((val, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"w-full p-2 border rounded\",\n        placeholder: `Paid by Person ${i + 1}`,\n        value: val,\n        onChange: e => updatePaid(i, e.target.value)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"w-full p-2 border rounded\",\n        placeholder: \"Total Expense\",\n        value: total,\n        onChange: e => setTotal(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runProver,\n        className: \"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\",\n        children: \"Run ZK Proof\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), output && /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"mt-4 p-4 bg-white border rounded text-sm overflow-auto\",\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vR/7BIySlPB2l+6GxJCjkrunnZM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","paid","setPaid","total","setTotal","output","setOutput","updatePaid","index","value","updated","runProver","data","paid_list","map","Number","fetch","method","headers","body","JSON","stringify","res","text","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","val","i","type","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/omer/Desktop/Noir-hack/expense_splitter/frontend/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function App() {\n  const [paid, setPaid] = useState([\"\", \"\", \"\"]);\n  const [total, setTotal] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  const updatePaid = (index: number, value: string) => {\n    const updated = [...paid];\n    updated[index] = value;\n    setPaid(updated);\n  };\n\n  const runProver = async () => {\n    const data = {\n      paid_list: paid.map(Number),\n      total: Number(total),\n    };\n\n    await fetch(\"/write-toml\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    });\n\n    const res = await fetch(\"/run-prover\");\n    const text = await res.text();\n    setOutput(text.trim());\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">ðŸ§® ZK Expense Splitter</h1>\n      <div className=\"space-y-2 w-full max-w-sm\">\n        {paid.map((val, i) => (\n          <input\n            key={i}\n            type=\"number\"\n            className=\"w-full p-2 border rounded\"\n            placeholder={`Paid by Person ${i + 1}`}\n            value={val}\n            onChange={(e) => updatePaid(i, e.target.value)}\n          />\n        ))}\n        <input\n          type=\"number\"\n          className=\"w-full p-2 border rounded\"\n          placeholder=\"Total Expense\"\n          value={total}\n          onChange={(e) => setTotal(e.target.value)}\n        />\n        <button\n          onClick={runProver}\n          className=\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\"\n        >\n          Run ZK Proof\n        </button>\n        {output && (\n          <pre className=\"mt-4 p-4 bg-white border rounded text-sm overflow-auto\">\n            {output}\n          </pre>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}